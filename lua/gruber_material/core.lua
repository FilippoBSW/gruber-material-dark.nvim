local M = {}

local function set_highlights(c)
    local hl=vim.api.nvim_set_hl
    hl(0,"Normal",{fg=c.fg0,bg=c.bg0})
    hl(0,"Cursor",{fg=c.yellow,bg=c.yellow})
    hl(0,"Visual",{bg=c.bg2})
    hl(0,"Search",{bg=c.bg2})
    hl(0,"CursorLine",{bg=c.bg0})
    hl(0,"CursorColumn",{bg=c.yellow})
    hl(0,"LineNr",{fg=c.bg4})
    hl(0,"CursorLineNr",{fg=c.yellow})
    hl(0,"VertSplit",{fg=c.bg2})
    hl(0,"WinSeparator",{fg=c.bg2})
    hl(0,"StatusLine",{fg=c.fg0,bg=c.bg1})
    hl(0,"StatusLineNC",{fg=c.bg4,bg=c.bg1})
    hl(0,"Pmenu",{fg=c.fg0,bg=c.bg1})
    hl(0,"PmenuSel",{bg=c.bg2})
    hl(0,"PmenuThumb",{bg=c.bg2})
    hl(0,"WildMenu",{fg=c.fg0,bg=c.bg2})
    hl(0,"SignColumn",{bg=c.bg0})
    hl(0,"Title",{fg=c.quartz})
    hl(0,"FloatBorder",{fg=c.bg2})
    hl(0,"NormalFloat",{bg=c.bg1})

    hl(0,"Comment",{fg=c.brown})
    hl(0,"Constant",{fg=c.fg0})
    hl(0,"String",{fg=c.green})
    hl(0,"Character",{fg=c.green})
    hl(0,"Number",{fg=c.fg0})
    hl(0,"Boolean",{fg=c.quartz})
    hl(0,"Float",{fg=c.fg0})
    hl(0,"Identifier",{fg=c.fg0})
    hl(0,"Function",{fg=c.niagara2})
    hl(0,"Statement",{fg=c.yellow})
    hl(0,"Conditional",{fg=c.yellow})
    hl(0,"Repeat",{fg=c.yellow})
    hl(0,"Label",{fg=c.yellow})
    hl(0,"Operator",{fg=c.fg0})
    hl(0,"Keyword",{fg=c.yellow})
    hl(0,"Exception",{fg=c.yellow})
    hl(0,"PreProc",{fg=c.quartz})
    hl(0,"Include",{fg=c.quartz})
    hl(0,"Define",{fg=c.quartz})
    hl(0,"Macro",{fg=c.quartz})
    hl(0,"Type",{fg=c.quartz})
    hl(0,"StorageClass",{fg=c.quartz})
    hl(0,"Structure",{fg=c.quartz})
    hl(0,"Typedef",{fg=c.quartz})
    hl(0,"Special",{fg=c.quartz})
    hl(0,"SpecialComment",{fg=c.brown})
    hl(0,"Underlined",{underline=true})
    hl(0,"Bold",{bold=true})
    hl(0,"Italic",{italic=true})
    hl(0,"Todo",{fg=c.fg0,bg=c.bg_red})
    hl(0,"TrailingSpace",{fg=c.red})

    hl(0,"DiagnosticError",{fg=c.red})
    hl(0,"DiagnosticWarn",{fg=c.yellow})
    hl(0,"DiagnosticInfo",{fg=c.quartz})
    hl(0,"DiagnosticHint",{fg=c.green})

    hl(0,"MatchParen",{fg=c.wisteria})
    hl(0,"Directory",{fg=c.niagara2})
    hl(0,"Question",{fg=c.green})
    hl(0,"MoreMsg",{fg=c.green})
    hl(0,"ErrorMsg",{fg=c.red})
    hl(0,"WarningMsg",{fg=c.wisteria})
    hl(0,"ModeMsg",{fg=c.fg0})
    hl(0,"SpecialKey",{fg=c.quartz})
    hl(0,"NonText",{fg=c.bg4})
    hl(0,"Whitespace",{fg=c.bg1})
    hl(0,"Folded",{fg=c.fg0,bg=c.bg1})
    hl(0,"FoldColumn",{bg=c.bg0})
    hl(0,"LspReferenceText",{bg=c.bg2})
    hl(0,"LspReferenceRead",{bg=c.bg2})
    hl(0,"LspReferenceWrite",{bg=c.bg2})
    hl(0,"LspSignatureActiveParameter",{fg=c.yellow,bg=c.bg2})

    hl(0,"@keyword.import.c",{link="Include"})
    hl(0,"@keyword.import.cpp",{link="Include"})
    hl(0,"@function.method",{link="Function"})
    hl(0,"@function.method.call",{link="Function"})
    hl(0,"@function.method.call.cpp",{link="Function"})
    hl(0,"@constructor",{link="Function"})
    hl(0,"@constructor.cpp",{link="Function"})
end

function M.apply(palette)
    vim.o.background="dark"
    set_highlights(palette)
end

return M
